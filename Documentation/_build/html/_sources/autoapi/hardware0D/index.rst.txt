
:mod:`hardware0D`
=================

.. py:module:: hardware0D









Module Contents
---------------



.. py:class:: DAQ_0DViewer_Det_type

   Enum class of Det_Type

   ================ ==========
   **Attributes**   **Type**
   *Mock*           int
   *Keithley_Pico*  int
   *NIDAQ*          int
   ================ ==========


   

   

   

   .. method:: names()

      


   



.. py:class:: DAQ_0DViewer_Keithley_Pico_type

   Enum class of Keithley_Pico_type

   =============== =========
   **Attributes**  **Type**
   *Pico_648X*     int
   *Pico_6430*     int
   *Pico_6514*     int
   =============== =========


   

   

   

   .. method:: names()

      


   



.. py:class:: DAQ_0DViewer_NIDAQ_source

   Enum class of NIDAQ_source

   =============== ==========
   **Attributes**   **Type**
   *Analog_Input*   int
   *Counter*        int
   =============== ==========


   

   

   

   .. method:: names()

      


   



.. py:class:: DAQ_0DViewer_Mock(parent=None,params_state=None)

   =============== =================
   **Attributes**  **Type**
   *params*        dictionnary list
   *x_axis*        1D numpy array
   *ind_data*      int
   =============== =================


   

   

   

   .. method:: __init__(parent=None,params_state=None)

      



   

   .. method:: commit_settings(param)

      
      Setting the mock data.

      ============== ========= =================
      **Parameters**  **Type**  **Description**
      *param*         none      not used
      ============== ========= =================

      .. seealso:: :meth:`set_Mock_data`

      



   

   .. method:: set_Mock_data()

      
      For each parameter of the settings tree compute linspace numpy distribution with local parameters values
      and add computed results to the data_mock list.

      



   

   .. method:: Ini_Detector()

      
      Initialisation procedure of the detector.

      :returns: the initialized status.
      :rtype: ???

      .. seealso:: :meth:`set_Mock_data`

      



   

   .. method:: Close()

      
      not implemented.

      



   

   .. method:: Grab(Naverage=1)

      
      | Start new acquisition.
      |

      For each data on data_mock :
          * shift right data of ind_data positions
          * if naverage parameter is defined append the mean of the current data to the data to be grabbed.

      |
      | Send the data_grabed_signal once done.

      =============== ======== ===============================================
      **Parameters**  **Type**  **Description**
      *Naverage*      int       specify the threshold of the mean calculation
      =============== ======== ===============================================

      



   

   .. method:: Stop()

      
      not implemented.

      


   



.. py:class:: DAQ_0DViewer_Keithley_Pico(parent=None,params_state=None)

   ==================== ========================
   **Attributes**        **Type**
   *data_grabed_signal*  instance of pyqtSignal
   *VISA_rm*             ResourceManager
   *com_ports*
   *params*              dictionnary list
   *keithley*
   *settings*
   ==================== ========================


   

   

   

   .. method:: __init__(parent=None,params_state=None)

      



   

   .. method:: Ini_Detector()

      
      Initialisation procedure of the detector.

      :returns:
      :rtype: The initialized status.

      .. seealso:: :meth:`DAQ_utils.ThreadCommand`

      



   

   .. method:: commit_settings(param)

      
      Activate the parameters changes in the hardware.

      =============== ================================= ============================
      **Parameters**   **Type**                         **Description**
      *param*         instance of pyqtgraph.parameter   The parameter to be checked.
      =============== ================================= ============================

      .. seealso:: :meth:`DAQ_utils.ThreadCommand`

      



   

   .. method:: Close()

      
      Close the current instance of Keithley viewer.

      



   

   .. method:: Grab(Naverage=1)

      
      | Start new acquisition.
      | Grab the current values with keithley profile procedure.
      | Send the data_grabed_signal once done.

      =============== ======== ===============================================
      **Parameters**  **Type**  **Description**
      *Naverage*      int       Number of values to average
      =============== ======== ===============================================

      



   

   .. method:: Stop()

      
      not implemented?

      


   



.. py:class:: DAQ_0DViewer_NIDAQ(parent=None,params_state=None)

   ==================== ========================
   **Attributes**         **Type**
   *data_grabed_signal*   instance of pyqtSignal
   *params*               dictionnary list
   *task*
   ==================== ========================

   .. seealso:: :class:`refresh_hardware`


   

   

   

   .. method:: __init__(parent=None,params_state=None)

      



   

   .. method:: commit_settings(param)

      
      Activate the parameters changes in the hardware.

      =============== ================================ ===========================
      **Parameters**   **Type**                        **Description**
      *param*         instance of pyqtgraph.parameter   the parameter to activate
      =============== ================================ ===========================

      .. seealso:: :meth:`update_NIDAQ_channels`, :meth:`update_task`, :meth:`DAQ_0DViewer_NIDAQ_source`, :meth:`refresh_hardware`

      



   

   .. method:: update_NIDAQ_devices()

      
      Read and decode devices in the buffer.

      =============== ========= =================
      **Parameters**  **Type**   **Description**
      *cls*            ???
      =============== ========= =================

      :returns: list of devices
      :rtype: list

      



   

   .. method:: update_NIDAQ_channels(device=None,type_signal=None)

      
      Update the communication channels of the NIDAQ hardware.

      =============== ========== =======================
      **Parameters**   **Type**  **Description**
      *device*         string    the name of the device
      *type_signal*    string    the type of the signal
      =============== ========== =======================

      .. seealso:: :meth:`DAQ_0DViewer_NIDAQ_source`, :meth:`DAQ_utils.ThreadCommand`

      



   

   .. method:: refresh_hardware()

      
      Refresh the NIDAQ hardware from settings values.

      .. seealso:: :meth:`update_NIDAQ_devices`, :meth:`update_NIDAQ_channels`

      



   

   .. method:: update_task()

      
      Update the current module task from settings parameters.

      .. seealso:: :meth:`DAQ_0DViewer_NIDAQ_source`, :meth:`DAQ_utils.ThreadCommand`

      



   

   .. method:: Ini_Detector()

      
      Initialisation procedure of the detector.

      .. seealso:: :meth:`DAQ_utils.ThreadCommand`

      



   

   .. method:: Close()

      
      Close the current module task.

      



   

   .. method:: Grab(Naverage=1)

      
      | Grab the current values with NIDAQ profile procedure.
      |
      | Send the data_grabed_signal once done.

      =============== ======== ===============================================
      **Parameters**  **Type**  **Description**
      *Naverage*      int       Number of values to average
      =============== ======== ===============================================

      .. seealso:: :meth:`DAQ_0DViewer_NIDAQ_source`

      



   

   .. method:: Stop()

      
      not implemented.

      


   


